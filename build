#!/bin/bash

set -e

usage() {
cat << EOF
Usage: "${0}" [OPTIONS]
Build Mindsync Docker Python images.

Options:
    -c, --use-cache Use layer cache when building a new image.
    --noavx         Build jupyter image with tensorflow having no AVX support.
    --minimal       Build minimal image allowing editing notebooks.
    --build-num     Build number to include into verseion number of the target image.
                    If not specified no version included (default: '')
    --build-ver     Build image version (default: 0.1)
    -h, --help      Print help message.
EOF
}

CACHE_FLAG='--no-cache'
IMAGE_NAME='mindsync/python'
IMAGE_TAG='gpu-p37-cu11'
DOCKERFILE="Dockerfile"
BUILD_VERSION='0.1'
BUILD_NUMBER=
MINIMAL=
VAST_IMAGE_NAME=mindsync/python:latest-vastai
CACHE_IMAGE_TAG=latest


while :; do
    case "${1}" in 
        --noavx)
            IMAGE_TAG='gpu-p37-cu11-noavx'
            DOCKERFILE='Dockerfile-noavx'
            VAST_IMAGE_NAME=mindsync/python:latest-vastai-noavx
            CACHE_IMAGE_TAG=latest-noavx
            ;;
        --minimal)
            MINIMAL='1'
            ;;
        -h|--help)
            usage
            exit
            ;;
        -c|--use-cache)
            CACHE_FLAG=
            ;;
        --build-ver)
            shift
            BUILD_VERSION="${1}"
            ;;
        --build-num)
            shift
            BUILD_NUMBER="${1}"
            ;;
        -?*)
            usage
            printf 'ERROR: Unknown option: %s\n' "$1" >&2
            exit 1
            ;;
        *)
            break
    esac

    shift
done

make_build_ver() {
    echo -n "${1}.${2}-"
}

set -ex

if [ -n "${BUILD_NUMBER}" ]; then
    IMAGE_VERSION="$(make_build_ver "${BUILD_VERSION}" "${BUILD_NUMBER}")"
else
    IMAGE_VERSION=
fi

if [ -n "${MINIMAL}" ]; then
    docker build -t "${IMAGE_NAME}:${IMAGE_VERSION}minimal" -f "Dockerfile-minimal" .
    exit 0
fi 

FULL_IMAGE_NAME="${IMAGE_NAME}:${IMAGE_VERSION}${IMAGE_TAG}"
FULL_CACHE_IMAGE_NAME="${IMAGE_NAME}:${CACHE_IMAGE_TAG}"

if [ -z "${CACHE_FLAG}" ]; then
    DOCKER_BUILDKIT=1 docker build --rm --pull --cache-from "${FULL_CACHE_IMAGE_NAME}" -t "${FULL_IMAGE_NAME}" -f "${DOCKERFILE}" --build-arg BUILDKIT_INLINE_CACHE=1 .
else
    DOCKER_BUILDKIT=1 docker build --rm --pull ${CACHE_FLAG} -t "${FULL_IMAGE_NAME}" -f "${DOCKERFILE}" --build-arg BUILDKIT_INLINE_CACHE=1 .
fi

docker build --build-arg "BASE=${FULL_IMAGE_NAME}" -t "${VAST_IMAGE_NAME}" -f Dockerfile-vastai .
